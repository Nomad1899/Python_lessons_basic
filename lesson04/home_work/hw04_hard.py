# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку
print ([[x[n] for x in matrix] for n in range(0,3)])

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
import re
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""
#Сдвиг на 5 цифр
pattern='\d{5}'
five_nums=re.findall(pattern,number)
print(five_nums)
s=[int(x[0])*int(x[1])*int(x[2])*int(x[3])*int(x[4]) for x in five_nums]
print('максимальное значение',max(s))
print('Cдвиг', len(s[:s.index(max(s))]*5))
#Сдвиг на 1 цифру
n=0
maximum=1
index_max=0
while n<=(len(number)-5):
    five_nums = re.findall(pattern, number[n:])
    k=five_nums
    if int(k[0][0])*int(k[0][1])*int(k[0][2])*int(k[0][3])*int(k[0][4])>maximum:
        maximum=int(k[0][0])*int(k[0][1])*int(k[0][2])*int(k[0][3])*int(k[0][4])
        index_max=n
    n+=1
print('значение максимума',maximum,'сдвиг',index_max)
# только последовательные числа
pattern='\d'
nums=re.findall(pattern,number)
nums=''.join(nums)
max=0
index_max=0
for i in range(0,len(nums)-4):
    if int(nums[i+4])-int(nums[i+3])==1 and int(nums[i+3])-int(nums[i+2])==1 and int(nums[i+2])-int(nums[i+1])==1 and int(nums[i+1])-int(nums[i])==1:
        if int(nums[i])*int(nums[i+1])*int(nums[i+2])*int(nums[i+3])*int(nums[i+4])>max:
            max = int(nums[i])*int(nums[i+1])*int(nums[i+2])*int(nums[i+3])*int(nums[i+4])
            index_max=i
print(f"наибольшее произведение пяти последовательных цифр {max},смещение первого числа {index_max}")



# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

#координаты будем получать в виде двумерного списка
def func(array):
    x=[]
    y=[]
    def x_coor(array):
        x=[i[0] for i in array]
        for m in x:
            if x.count(m)>=2:
                return True

    def y_coor(array):
        y=[i[1] for i in array]
        for n in y:
            if y.count(n)>=2:
                return True
    def xy_coor(array):
        for i in range(0,len(x)):
            for n in range (i+1,len(x)):
                if abs(x[i]-x[n])==abs(y[i]-y[n]):
                    return True
    if x_coor(array)or y_coor(array)or xy_coor(array):
        return 'YES'
    else:
        return 'NO'
print(func([[1,1],[5,2],[8,3],[6,4],[3,5],[7,6],[2,7],[4,8]]))
